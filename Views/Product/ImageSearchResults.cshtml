@model List<Bloomie.Models.ViewModels.ProductViewModel.ProductWithRating>

@{
    var searchColors = ViewBag.SearchColors as List<string> ?? new List<string>();
    var searchFlowerTypes = ViewBag.SearchFlowerTypes as List<string> ?? new List<string>();
    var searchPresentations = ViewBag.SearchPresentations as List<string> ?? new List<string>();
    var recognizedFlower = ViewBag.RecognizedFlower as string ?? "";
    var confidence = ViewBag.Confidence as float? ?? 0f;
}

<style>
    .recognition-info {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
    }

    .recognition-info h2 {
        font-size: 1.8rem;
        margin-bottom: 15px;
        font-weight: 700;
    }

    .flower-name {
        font-size: 2.2rem;
        font-weight: 800;
        margin: 10px 0;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
    }

    .confidence-bar {
        background: rgba(255,255,255,0.3);
        height: 30px;
        border-radius: 15px;
        overflow: hidden;
        margin-top: 10px;
    }

    .confidence-fill {
        background: linear-gradient(90deg, #4ade80, #22c55e);
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        transition: width 0.8s ease;
    }

    .search-criteria {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 25px;
        border-left: 5px solid #667eea;
    }

    .search-tag {
        display: inline-block;
        background: #667eea;
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        margin: 5px;
        font-size: 0.9rem;
    }

    .results-count {
        font-size: 1.2rem;
        color: #666;
        margin-bottom: 20px;
    }

    .hover-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .hover-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(0,0,0,0.15) !important;
    }
</style>

<!-- Th√¥ng tin nh·∫≠n d·∫°ng -->
@if (!string.IsNullOrEmpty(recognizedFlower))
{
    <div class="recognition-info">
        <h2>üå∏ K·∫øt qu·∫£ nh·∫≠n d·∫°ng h√¨nh ·∫£nh</h2>
        <div class="flower-name">@recognizedFlower</div>
        <div>
            <small>ƒê·ªô tin c·∫≠y:</small>
            <div class="confidence-bar">
                <div class="confidence-fill" style="width: @((confidence * 100).ToString("F0"))%">
                    @((confidence * 100).ToString("F1"))%
                </div>
            </div>
        </div>
    </div>
}

<!-- Ti√™u ch√≠ t√¨m ki·∫øm -->
@if (searchFlowerTypes.Any() || searchColors.Any())
{
    <div class="search-criteria">
        <h4><i class="bi bi-funnel"></i> T√¨m ki·∫øm theo:</h4>

        @if (searchFlowerTypes.Any())
        {
            <div class="mt-2">
                <strong>Lo·∫°i hoa:</strong>
                @foreach (var flowerType in searchFlowerTypes)
                {
                    <span class="search-tag">@flowerType</span>
                }
            </div>
        }

        @if (searchColors.Any())
        {
            <div class="mt-2">
                <strong>M√†u s·∫Øc:</strong>
                @foreach (var color in searchColors)
                {
                    <span class="search-tag" style="background: #e74c3c;">@color</span>
                }
            </div>
        }
    </div>
}

<h2>K·∫øt qu·∫£ t√¨m ki·∫øm</h2>

@if (Model.Any())
{
    <div class="results-count">
        <i class="bi bi-check-circle-fill text-success"></i>
        T√¨m th·∫•y <strong>@Model.Count</strong> s·∫£n ph·∫©m ph√π h·ª£p
    </div>

    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="card h-100 shadow-sm hover-card">
                    <a href="@Url.Action("Display", "Product", new { id = product.Product.Id })" style="text-decoration: none; color: inherit;">
                        @if (!string.IsNullOrEmpty(product.Product.ImageUrl))
                        {
                            <img src="@product.Product.ImageUrl" class="card-img-top" alt="@product.Product.Name" style="height: 250px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="bg-light d-flex align-items-center justify-content-center" style="height: 250px;">
                                <span class="text-muted">Kh√¥ng c√≥ h√¨nh ·∫£nh</span>
                            </div>
                        }

                        <div class="card-body">
                            <h5 class="card-title text-truncate">@product.Product.Name</h5>

                            <!-- Gi√° -->
                            <div class="mb-2">
                                @if (product.Product.DiscountPercentage.HasValue && product.Product.DiscountPercentage > 0)
                                {
                                    <span class="text-muted text-decoration-line-through">@product.Product.Price.ToString("N0") ƒë</span>
                                    <span class="text-danger fw-bold d-block">@product.Product.DiscountPrice.Value.ToString("N0") ƒë</span>
                                    <span class="badge bg-danger">-@product.Product.DiscountPercentage%</span>
                                }
                                else
                                {
                                    <span class="text-danger fw-bold">@product.Product.Price.ToString("N0") ƒë</span>
                                }
                            </div>

                            <!-- ƒê√°nh gi√° -->
                            <div class="mb-2">
                                @{
                                    int fullStars = (int)product.Rating;
                                    bool hasHalfStar = (double)product.Rating - fullStars >= 0.5;
                                    int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                                }
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                @if (hasHalfStar)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                @for (int i = 0; i < emptyStars; i++)
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                                <small class="text-muted">(@product.Rating.ToString("0.0"))</small>
                            </div>

                            <!-- Th√¥ng tin -->
                            @if (product.FlowerTypes.Any())
                            {
                                <p class="card-text small mb-1">
                                    <i class="bi bi-flower1"></i> <strong>Lo·∫°i hoa:</strong> @string.Join(", ", product.FlowerTypes.Take(2))
                                </p>
                            }

                            @if (product.Colors.Any())
                            {
                                <p class="card-text small mb-1">
                                    <i class="bi bi-palette"></i> <strong>M√†u:</strong> @string.Join(", ", product.Colors.Take(3))
                                </p>
                            }
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-warning text-center" role="alert">
        <i class="bi bi-exclamation-triangle fs-1"></i>
        <h4 class="mt-3">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p</h4>
        <p>H·ªá th·ªëng kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o kh·ªõp v·ªõi hoa <strong>@recognizedFlower</strong></p>
        <p class="mb-3">G·ª£i √Ω:</p>
        <ul class="list-unstyled">
            <li>‚úì Th·ª≠ ch·ª•p ·∫£nh t·ª´ g√≥c ƒë·ªô kh√°c</li>
            <li>‚úì ƒê·∫£m b·∫£o h√¨nh ·∫£nh r√µ n√©t v√† c√≥ √°nh s√°ng t·ªët</li>
            <li>‚úì Ho·∫∑c <a href="@Url.Action("Index", "Product")" class="alert-link">xem t·∫•t c·∫£ s·∫£n ph·∫©m</a></li>
        </ul>
    </div>
}
